#!/bin/env spartan-test
<?
//  
// https://github.com/parf/spartan-test
//
// HOMEBASE FRAMEWORK
// Mongo ORM v2
// https://github.com/parf/Mongo-PHP-ORM

# ;include_once "init.php";
; M::reset();
get_class(M());
#="MongoClient"

// GOOD EXAMPLE
M("test.dot_set")->remove(["_id"=>1]);
#=true

M("test.dot_set")->insert(["_id" =>1]);
#=1

M("test.dot_set", 1)["a.b.c"] = 3;
#=3

M("test.dot_set", 1)["a.b.c"];
#=3


// BUG EXAMPLE
M("test.dot_set")->remove(["_id"=>1]);
#=true

M("test.dot_set")->insert(["_id" =>1, "a"=>[]]);
#=1

M("test.dot_set", 1)["a.b.c"] = 2;
#=2

M("test.dot_set", 1)->_;
#={"_id":1,"a":[]}

M("test.dot_set", 1)["a.b.c"];
#=null

// BUG EXAMPLE (raw mongo)
$M = new MongoClient("mdb");
#={"class":"MongoClient","0":{"connected":false,"status":null}}

$T = M()->test->dot_set;
#={"class":"MongoCollection","0":{"w":0,"wtimeout":10000}}

M("test.dot_set")->remove(["_id"=>2]);
#=true

$T->insert(["_id" => 2, "a" => []]);
#=true

$T->findOne(["_id" => 2]);
#={"_id":2,"a":[]}

$T->update(["_id" => 2], ['$set' => ["a.b.c" => 1]]);
#=true

$T->findOne(["_id" => 2]);
#={"_id":2,"a":[]}


